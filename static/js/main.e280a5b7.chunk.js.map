{"version":3,"sources":["router.js","style/GlobalStyled.js","components/Header.js","api.js","components/Loader.js","components/Home/MainBanner.js","components/Container.js","components/Home/Movies.js","components/PageTitle.js","components/PageNotFound.js","components/Home/Home.js","components/Detail/Detail.js","components/Search/Search.js","components/Footer.js","components/ScrollTop.js","App.js","index.js"],"names":["router","mainColor","mainWeight","moSize","GlobalStyled","createGlobalStyle","reset","SHeader","styled","header","props","bgColor","Logo","h3","MenuWrap","ul","Menu","li","Header","useState","bg","setBg","window","addEventListener","sct","pageYOffset","to","api","axios","create","baseURL","params","api_key","language","movieApi","get","id","movie_id","term","query","encodeURIComponent","Wrap","div","loadingAni","keyframes","Loading","Loader","SMainBanner","section","Title","Desc","p","BlackBg","Button","button","MoreBanner","height","ConWrap","MoreTitle","MoreDesc","CoverBg","CloseBtn","MainBanner","now","num","more","setMore","moreNum","setMoreNum","style","backgroundImage","backdrop_path","title","overview","slice","onClick","scrollTo","top","left","behavior","icon","faTimes","SContainer","Container","children","CoverImg","MovieTitle","h4","SwiperCore","use","Navigation","Movies","movieData","modules","breakpoints","slidesPerView","spaceBetween","navigation","map","play","poster_path","PageTitle","EmogiAni","Emogi","h1","h2","SubTitle","GoHome","PageNotFound","Section","Home","nowPlay","setNowPlay","upComing","setUpComing","popular","setPopular","topRate","setTopRate","loading","setLoading","useEffect","a","nowPlaying","data","results","Img","Sub","VideoWrap","Video","iframe","Detail","useParams","setMovieData","videoData","setVideoData","movieDetail","release_date","runtime","genres","genre","name","videoWrapTop","document","querySelector","offsetTop","console","log","className","src","key","Form","form","Input","input","Con","ConBg","Search","search","setSearch","error","setError","noSearch","setNoSearch","useForm","mode","register","getValues","handleSubmit","onSubmit","length","required","type","placeholder","searchData","background","SFooter","footer","Footer","ScrollTop","location","useLocation","App","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e280a5b7.chunk.js","sourcesContent":["export const router = {\r\n  home: \"/\",\r\n  detail: \"/detail/:id\",\r\n  search: \"/search\",\r\n  pageNotFound: \"/PageNotFound\",\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { reset } from \"styled-reset\";\r\n\r\nexport const mainColor = {\r\n  fontColor: \"#fff\",\r\n  bgColor: \"#1d1d1d\",\r\n};\r\n\r\nexport const mainWeight = {\r\n  TitleWeight: 600,\r\n};\r\n\r\nexport const moSize = {\r\n  padding: \"0 20px\",\r\n  titleSize: \"45px\",\r\n  descSize: \"16px\",\r\n  movieTitle: \"14px\",\r\n};\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\n    ${reset}\r\n\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n\r\n    a{\r\n        color: #fff;\r\n        text-decoration: none;\r\n    }\r\n\r\n    body{\r\n        font-family:  'Noto Sans KR', sans-serif;\r\n        background-color: ${mainColor.bgColor};\r\n        color: ${mainColor.fontColor};\r\n        letter-spacing: -1px;\r\n        word-break: keep-all;\r\n    }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { router } from \"../router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { mainWeight, moSize } from \"../style/GlobalStyled\";\r\n\r\nconst SHeader = styled.header`\r\n  width: 100%;\r\n  height: 60px;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 99;\r\n  padding: 0 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: ${(props) => props.bgColor};\r\n  transition-duration: 0.5s;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    padding: ${moSize.padding};\r\n  }\r\n`;\r\n\r\nconst Logo = styled.h3`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n  a {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nconst MenuWrap = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Menu = styled.li`\r\n  &:nth-child(1) {\r\n    margin-right: 50px;\r\n  }\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  @media screen and (max-width: 500px) {\r\n    &:nth-child(1) {\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Header = () => {\r\n  const [bg, setBg] = useState();\r\n  // const[fix, setfix] = useState();\r\n\r\n  const handleScroll = () => {\r\n    const sct = window.pageYOffset;\r\n    // console.log(sct);\r\n\r\n    if (sct >= 200) {\r\n      setBg(\"rgba(0,0,0,0.7)\");\r\n      // setfix(\"fixed\");\r\n    } else {\r\n      setBg(\"\");\r\n      // setfix(\"absolute\");\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", handleScroll);\r\n\r\n  return (\r\n    <SHeader bgColor={bg}>\r\n      {/* SHeader fixed={fix} 전달, position props에전달해주기 */}\r\n      <Logo>\r\n        <Link to={router.home}>PATI</Link>\r\n      </Logo>\r\n\r\n      <MenuWrap>\r\n        <Menu>\r\n          <Link to={router.home}>홈</Link>\r\n        </Menu>\r\n        <Menu>\r\n          <Link to={router.search}>영화검색</Link>\r\n        </Menu>\r\n      </MenuWrap>\r\n    </SHeader>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"aefbb555316db9bc7c281aac3b51a2bc\",\r\n    language: \"ko-KR\",\r\n  },\r\n});\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  topRate: () => api.get(\"movie/top_rated\"),\r\n  detail: (id) => api.get(`movie/${id}`),\r\n  video: (movie_id) => api.get(`movie/${movie_id}/videos`),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        // query: term,\r\n        // => uri주소로 전환\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n\r\n  // https://api.themoviedb.org/3/api_key/language/nowPlaying => 으로 불러옴\r\n};\r\n\r\n/* <form action=\"\" method=\"GET\" ></form>; */\r\n\r\n//현재 상영영화, 개봉예정\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst loadingAni = keyframes`\r\n100%{\r\n    transform: rotate(360deg)\r\n}\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 10px solid crimson;\r\n  border-radius: 50%;\r\n  border-color: crimson transparent transparent transparent;\r\n  animation: ${loadingAni} 1s infinite;\r\n`;\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Wrap>\r\n      <Loading></Loading>\r\n    </Wrap>\r\n  );\r\n};\r\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { mainColor, mainWeight, moSize } from \"../../style/GlobalStyled\";\r\n\r\nconst SMainBanner = styled.section`\r\n  height: 80vh;\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 220px 80px;\r\n  position: relative;\r\n  @media screen and (max-width: 500px) {\r\n    padding: 220px 20px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  /* 가로값 max-width로 잡아주는게 좋음 */\r\n  max-width: 550px;\r\n  width: 100%;\r\n  font-size: 80px;\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  line-height: 1.2em;\r\n  margin-bottom: 25px;\r\n  text-shadow: 0 0 15px rgba(0, 0, 0, 0.7);\r\n  position: relative;\r\n  z-index: 9;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 45px;\r\n    margin-bottom: 15px;\r\n    margin-top: 100px;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  max-width: 600px;\r\n  width: 100%;\r\n  font-size: 20px;\r\n  opacity: 0.9;\r\n  line-height: 1.4em;\r\n  text-shadow: 0 0 15px rgba(0, 0, 0, 0.9);\r\n  position: relative;\r\n  z-index: 9;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: ${moSize.descSize};\r\n  }\r\n`;\r\n\r\nconst BlackBg = styled.div`\r\n  width: 100%;\r\n  height: 60vh;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: 0;\r\n  background: linear-gradient(0deg, black, transparent);\r\n`;\r\n\r\nconst Button = styled.button`\r\n  all: unset;\r\n  width: 160px;\r\n  height: 40px;\r\n  border: 1px solid #fff;\r\n  margin-top: 30px;\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  cursor: pointer;\r\n  text-align: center;\r\n  transition-duration: 0.3s;\r\n  position: relative;\r\n  z-index: 9;\r\n  span {\r\n    transition-duration: 0.2s;\r\n  }\r\n  &:hover {\r\n    background-color: ${mainColor.fontColor};\r\n    color: ${mainColor.bgColor};\r\n    span {\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst MoreBanner = styled.section`\r\n  /* height: 80vh; */\r\n  height: ${(props) => props.height};\r\n  background-color: #111;\r\n  margin-top: 100px;\r\n  padding-left: 80px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  overflow: hidden;\r\n  transition: 0.3s;\r\n`;\r\n\r\nconst ConWrap = styled.div`\r\n  width: 30%;\r\n`;\r\n\r\nconst MoreTitle = styled.div`\r\n  font-size: 80px;\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  line-height: 1.2em;\r\n  margin: 50px 0 30px 0;\r\n`;\r\n\r\nconst MoreDesc = styled.div`\r\n  max-width: 600px;\r\n  width: 100%;\r\n  font-size: 20px;\r\n  opacity: 0.9;\r\n  line-height: 2em;\r\n  text-shadow: 0 0 15px rgba(0, 0, 0, 0.9);\r\n`;\r\n\r\nconst CoverBg = styled.div`\r\n  width: 65%;\r\n  background-size: cover;\r\n  background-position: top;\r\n`;\r\n\r\nconst CloseBtn = styled.div`\r\n  padding: 50px;\r\n  float: right;\r\n  font-size: 30px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const MainBanner = ({ now, num }) => {\r\n  const [more, setMore] = useState(0);\r\n  const [moreNum, setMoreNum] = useState(0);\r\n\r\n  const onClickMore = () => {\r\n    if (moreNum === 0) {\r\n      setMore(\"80vh\");\r\n      window.scrollTo({\r\n        top: 500,\r\n        left: 0,\r\n        behavior: \"smooth\",\r\n      });\r\n      setMoreNum(moreNum + 1);\r\n    } else if (moreNum === 1) {\r\n      setMore(\"0\");\r\n      setMoreNum(moreNum - 1);\r\n    }\r\n    // else {\r\n    //   setMoreNum(moreNum === 0);\r\n    // }\r\n  };\r\n\r\n  const onClickClose = () => {\r\n    setMore(\"0\");\r\n    setMoreNum(moreNum - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SMainBanner\r\n        style={{\r\n          backgroundImage: `url(https://image.tmdb.org/t/p/original${\r\n            now[`${num}`].backdrop_path\r\n          })`,\r\n        }}\r\n      >\r\n        <Title>{now[`${num}`].title} </Title>\r\n        <Desc>{now[`${num}`].overview.slice(0, 70) + \"...\"}</Desc>\r\n        <BlackBg />\r\n\r\n        <Button onClick={onClickMore}>\r\n          더보기 <span>+</span>\r\n        </Button>\r\n      </SMainBanner>\r\n\r\n      <MoreBanner height={more}>\r\n        <ConWrap>\r\n          <MoreTitle>{now[`${num}`].title}</MoreTitle>\r\n          <MoreDesc>{now[`${num}`].overview.slice(0, 250) + \"...\"}</MoreDesc>\r\n        </ConWrap>\r\n        <CoverBg\r\n          style={{\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${\r\n              now[`${num}`].backdrop_path\r\n            })`,\r\n          }}\r\n        >\r\n          <CloseBtn onClick={onClickClose}>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </CloseBtn>\r\n        </CoverBg>\r\n      </MoreBanner>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { moSize } from \"../style/GlobalStyled\";\r\n\r\nconst SContainer = styled.section`\r\n  padding: 0 80px;\r\n  height: 100%;\r\n  @media screen and (max-width: 500px) {\r\n    padding: ${moSize.padding};\r\n  }\r\n`;\r\n\r\nexport const Container = ({ children }) => {\r\n  return <SContainer>{children}</SContainer>;\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Navigation } from \"swiper\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { mainWeight, moSize } from \"../../style/GlobalStyled\";\r\nimport \"../../style/swiper.css\";\r\n\r\nconst Title = styled.h3`\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  font-size: 35px;\r\n  margin: 80px 0 30px 0;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 25px;\r\n    margin: 50px 0 20px 0;\r\n  }\r\n`;\r\n\r\nconst CoverImg = styled.div`\r\n  height: 180px;\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nconst MovieTitle = styled.h4`\r\n  font-size: 18px;\r\n  margin-top: 15px;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: ${moSize.movieTitle};\r\n  }\r\n`;\r\n\r\nSwiperCore.use([Navigation]);\r\n\r\nexport const Movies = ({ movieData, title }) => {\r\n  const params = {\r\n    breakpoints: {\r\n      // 노트북이상\r\n      1024: {\r\n        slidesPerView: 5.2,\r\n        spaceBetween: 20,\r\n      },\r\n\r\n      // 아이폰 제일 작은 사이즈\r\n      320: {\r\n        slidesPerView: 2.1,\r\n        spaceBetween: 10,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Title>{title}</Title>\r\n      <Swiper\r\n        modules={[Navigation]}\r\n        // slidesPerView={5}\r\n        // spaceBetween={20}\r\n        {...params}\r\n        navigation\r\n      >\r\n        {movieData.map((play) => (\r\n          <SwiperSlide key={play.id}>\r\n            <Link to={`/detail/${play.id}`}>\r\n              {/* <Link to={router.detail /`${play.id}`}> */}\r\n              <CoverImg\r\n                style={{\r\n                  backgroundImage: `url(https://image.tmdb.org/t/p/original${play.poster_path})`,\r\n                }}\r\n              />\r\n              <MovieTitle>{play.title}</MovieTitle>\r\n            </Link>\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n","import { Helmet } from \"react-helmet-async\";\r\n\r\nexport const PageTitle = ({ title }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title} | Ub movie</title>\r\n    </Helmet>\r\n  );\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { router } from \"../router\";\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst ConWrap = styled.div`\r\n  width: 400px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst EmogiAni = keyframes`\r\n    0%{transform: rotateZ(0)}\r\n    20%{transform: rotateZ(-20deg)}\r\n    24%{transform: rotateZ(10deg)}\r\n    28%{transform: rotateZ(-10deg)}\r\n    36%{transform: rotateZ(0)}\r\n`;\r\n\r\nconst Emogi = styled.h1`\r\n  position: relative;\r\n  left: 15px;\r\n  font-size: 150px;\r\n  animation: ${EmogiAni} 2.5s infinite linear;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 50px 0 20px 0;\r\n  font-size: 50px;\r\n  opacity: 0.9;\r\n`;\r\n\r\nconst SubTitle = styled.h3`\r\n  font-size: 30px;\r\n  opacity: 0.9;\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  margin: 25px 0 40px 0;\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n  line-height: 24px;\r\n  opacity: 0.7;\r\n  text-align: center;\r\n  letter-spacing: 0.5px;\r\n`;\r\n\r\nconst GoHome = styled.button`\r\n  all: unset;\r\n  width: 200px;\r\n  height: 40px;\r\n  background-color: rgba(225, 225, 225, 0.3);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n  border-radius: 10px;\r\n`;\r\n\r\nexport const PageNotFound = () => {\r\n  return (\r\n    <div>\r\n      <Wrap>\r\n        <ConWrap>\r\n          <Emogi>✋</Emogi>\r\n          <Title>404</Title>\r\n          <SubTitle>Page not found</SubTitle>\r\n          <Desc>\r\n            The Page you are looking for doesn't exist or an other error\r\n            occurred. Go back, or head over to Main to choose a new direction.\r\n          </Desc>\r\n          <GoHome>\r\n            <Link to={router.home}>Go to Main</Link>\r\n          </GoHome>\r\n        </ConWrap>\r\n      </Wrap>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { movieApi } from \"../../api\";\r\nimport { Loader } from \"../Loader\";\r\nimport { MainBanner } from \"./MainBanner\";\r\nimport { Container } from \"../Container\";\r\nimport \"../../style/swiper.css\";\r\nimport { Movies } from \"./Movies\";\r\nimport { PageTitle } from \"../PageTitle\";\r\nimport { PageNotFound } from \"../PageNotFound\";\r\n// console.log(movieApi.nowPlaying());\r\n\r\nconst Wrap = styled.div``;\r\n\r\nconst Section = styled.section``;\r\n\r\nexport const Home = () => {\r\n  //Usestate를 이용하여 results 저장하고, useEffect 밖으로 변수 호출할 수 있도록 만들기\r\n  //   nowPlaying, upcomming까지\r\n\r\n  const [nowPlay, setNowPlay] = useState();\r\n  const [upComing, setUpComing] = useState();\r\n  const [popular, setPopular] = useState();\r\n  const [topRate, setTopRate] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const movieNum = 2;\r\n\r\n  useEffect(() => {\r\n    const movieData = async () => {\r\n      try {\r\n        //   console.log(await movieApi.nowPlaying());\r\n        const {\r\n          data: { results: nowPlaying },\r\n        } = await movieApi.nowPlaying();\r\n        setNowPlay(nowPlaying);\r\n\r\n        const {\r\n          data: { results: upComing },\r\n        } = await movieApi.upComing();\r\n        setUpComing(upComing);\r\n\r\n        const {\r\n          data: { results: popular },\r\n        } = await movieApi.popular();\r\n        setPopular(popular);\r\n\r\n        const {\r\n          data: { results: topRate },\r\n        } = await movieApi.topRate();\r\n        setTopRate(topRate);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        <PageNotFound />;\r\n      }\r\n    };\r\n    movieData();\r\n  }, []);\r\n\r\n  // console.log(\"현재 상영 영화\", nowPlay);\r\n  // console.log(\"개봉 예정 영화\", upComing);\r\n\r\n  // console.log(nowPlay && nowPlay[0]);\r\n  // => 처음엔 필수로 &&(있다면) 넣어달라고 적기 아니면 오류뜸\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle title=\"홈\" />\r\n\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {nowPlay && (\r\n            <Wrap>\r\n              <MainBanner now={nowPlay} num={movieNum} />\r\n\r\n              <Section>\r\n                <Container>\r\n                  <Movies movieData={nowPlay} title=\"현재 상영 영화\" />\r\n                  <Movies movieData={upComing} title=\"개봉 예정 영화\" />\r\n                  <Movies movieData={popular} title=\"인기 영화\" />\r\n                  <Movies movieData={topRate} title=\"상영 순위\" />\r\n                </Container>\r\n              </Section>\r\n            </Wrap>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { PageTitle } from \"../PageTitle\";\r\nimport { movieApi } from \"../../api\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { PageNotFound } from \"../PageNotFound\";\r\n// import { useLocatin } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Container } from \"../Container\";\r\nimport { Loader } from \"../Loader\";\r\nimport { mainColor, mainWeight, moSize } from \"../../style/GlobalStyled\";\r\n\r\nconst Wrap = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 80px;\r\n  @media screen and (max-width: 500px) {\r\n    flex-direction: column;\r\n    margin-top: 60px;\r\n  }\r\n`;\r\n\r\nconst Img = styled.div`\r\n  width: 60%;\r\n  height: 80vh;\r\n  margin-right: 30px;\r\n  background-size: cover;\r\n  background-position: top;\r\n  @media screen and (max-width: 500px) {\r\n    width: 100%;\r\n    height: 70vh;\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst ConWrap = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  letter-spacing: 0;\r\n  margin-left: 50px;\r\n  @media screen and (max-width: 500px) {\r\n    width: 100%;\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 30px;\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  margin-bottom: 20px;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: 34px;\r\n  }\r\n`;\r\n\r\nconst Sub = styled.li`\r\n  margin-bottom: 10px;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: ${moSize.descSize};\r\n  }\r\n`;\r\n\r\nconst Desc = styled.div`\r\n  margin-top: 10px;\r\n  opacity: 0.9;\r\n  font-weight: 300;\r\n  line-height: 22px;\r\n  @media screen and (max-width: 500px) {\r\n    font-size: ${moSize.descSize};\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  all: unset;\r\n  width: 160px;\r\n  height: 40px;\r\n  border: 1px solid #fff;\r\n  margin-top: 30px;\r\n  font-weight: ${mainWeight.TitleWeight};\r\n  cursor: pointer;\r\n  text-align: center;\r\n  transition-duration: 0.3s;\r\n  span {\r\n    transition-duration: 0.2s;\r\n  }\r\n  &:hover {\r\n    background-color: ${mainColor.fontColor};\r\n    color: ${mainColor.bgColor};\r\n    span {\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    width: 140px;\r\n    height: 40px;\r\n  }\r\n`;\r\n\r\nconst VideoWrap = styled.div`\r\n  height: 100vh;\r\n  padding: 60px 0;\r\n`;\r\n\r\nconst Video = styled.iframe`\r\n  width: 100%;\r\n  height: 80vh;\r\n`;\r\n\r\nexport const Detail = () => {\r\n  const { id } = useParams();\r\n  // console.log(id);\r\n\r\n  const [movieData, setMovieData] = useState();\r\n  const [videoData, setVideoData] = useState();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const movieDetail = async () => {\r\n      try {\r\n        // console.log(await movieApi.detail(19404));\r\n        const { data } = await movieApi.detail(id);\r\n        // console.log(data);\r\n        setMovieData(data);\r\n\r\n        // console.log(await movieApi.video(id));\r\n        const {\r\n          data: { results },\r\n        } = await movieApi.video(id);\r\n        // console.log(results[0].key);\r\n        setVideoData(results[0]);\r\n\r\n        setLoading(false);\r\n      } catch (error) {\r\n        // console.log(error);\r\n        <PageNotFound />;\r\n      }\r\n    };\r\n    movieDetail();\r\n  }, [id]);\r\n  // useEffect에서 바뀌는 값 []을 넣어주기 => 오류 사라지도록\r\n\r\n  // console.log(movieData);\r\n  // console.log(videoData);\r\n\r\n  const onClickVideo = () => {\r\n    const videoWrapTop = document.querySelector(\".video_wrap\").offsetTop;\r\n    console.log(videoWrapTop);\r\n\r\n    // window.scrollTo(0, 800);\r\n    window.scrollTo({\r\n      top: videoWrapTop,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <div>\r\n          {movieData && (\r\n            <>\r\n              <Container>\r\n                <PageTitle title=\"영화리뷰\" />\r\n                <Wrap>\r\n                  <Img\r\n                    style={{\r\n                      backgroundImage: `url(https://image.tmdb.org/t/p/original${movieData.poster_path})`,\r\n                    }}\r\n                  ></Img>\r\n                  <ConWrap>\r\n                    <Title>{movieData.title}</Title>\r\n                    <Sub>{movieData.release_date}</Sub>\r\n                    <Sub>{movieData.runtime + \"분\"}</Sub>\r\n                    <Sub>\r\n                      {movieData.genres.map((genre) => genre.name + \",\")}\r\n                    </Sub>\r\n                    <Desc>{movieData.overview}</Desc>\r\n                    <Button onClick={onClickVideo}>\r\n                      예고편 보기 <span>&rarr;</span>\r\n                    </Button>\r\n                  </ConWrap>\r\n                </Wrap>\r\n              </Container>\r\n            </>\r\n          )}\r\n\r\n          {/* videoData 있으면? 뜨게 없으면: 없다고 표시 */}\r\n          {videoData && (\r\n            <Container>\r\n              <VideoWrap className=\"video_wrap\">\r\n                <Video src={`https://www.youtube.com/embed/${videoData.key}`} />\r\n              </VideoWrap>\r\n            </Container>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* -movie detail design => 디자인 새로 해보기\r\n        -이미지 \"\"값일 떄 없다고 표현? useImage? => no Iamge 넣어주기 \r\n        setImage(이미지주소) */}\r\n\r\n      {/* {errorPage ? <PageNotFound/> : <>안에넣기</>} */}\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { PageTitle } from \"../PageTitle\";\r\nimport { Container } from \"../Container\";\r\nimport { movieApi } from \"../../api\";\r\nimport { PageNotFound } from \"../PageNotFound\";\r\nimport { Loader } from \"../Loader\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Form = styled.form`\r\n  margin-top: 120px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  width: 100%;\r\n  height: 60px;\r\n  border: 1px solid #555;\r\n  box-sizing: border-box;\r\n  padding: 10px 20px;\r\n  font-size: 18px;\r\n  &::placeholder {\r\n    font-size: 18px;\r\n  }\r\n`;\r\n\r\nconst ConWrap = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  row-gap: 30px;\r\n  column-gap: 30px;\r\n  margin-top: 50px;\r\n  @media screen and (max-width: 500px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n`;\r\n\r\nconst Con = styled.div``;\r\n\r\nconst ConBg = styled.div`\r\n  height: 180px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\n\r\nexport const Search = () => {\r\n  const [search, setSearch] = useState();\r\n  //검색하기를 눌렀을때 로딩이 떠야해서 ()비워둠\r\n  const [loading, setLoading] = useState();\r\n  const [error, setError] = useState(false);\r\n  const [noSearch, setNoSearch] = useState(\"\");\r\n\r\n  //1\r\n  const { register, getValues, handleSubmit } = useForm({\r\n    mode: \"onChange\",\r\n    // => 실시간으로 변화를 볼수있음(ex.아이디는 세자리 이상 입력해주세요, 비밀번호 몇글자 이상...)\r\n  });\r\n\r\n  // 4\r\n  const onSubmit = async () => {\r\n    const { term } = getValues();\r\n    // console.log(term);\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // 6\r\n      // api에서 search를 불러와서 매개변수로 term 전달해서 결과값을 콘솔로 찍기\r\n\r\n      // 7 콘솔찍으면서 try, catch 작성\r\n      // console.log(await movieApi.search(term));\r\n\r\n      const {\r\n        data: { results },\r\n      } = await movieApi.search(term);\r\n\r\n      if (results.length <= 0) {\r\n        setNoSearch(\"검색 결과가 없습니다😥\");\r\n      } else {\r\n        // if에서 \"내용\"을 가졌기 때문에 빈값으로 돌려줘야함\r\n        setNoSearch(\"\");\r\n        setSearch(results);\r\n      }\r\n\r\n      // useState에 저장\r\n      // console.log(results);\r\n      setSearch(results);\r\n\r\n      setLoading(false);\r\n    } catch (error) {\r\n      // console.log(error);\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  // console.log(search);\r\n\r\n  //5 api에 변수 저장\r\n\r\n  return (\r\n    <div>\r\n      <PageTitle title=\"영화검색\" />\r\n\r\n      <Container>\r\n        {/* 3 함수걸기 handleSubmit(매개변수) */}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          {/* 2 스프레드연산자로 연결 */}\r\n          <Input\r\n            {...register(\"term\", {\r\n              required: \"true\",\r\n              // 인풋값을 필수로 사용 => 네\r\n            })}\r\n            type=\"text\"\r\n            placeholder=\"검색...\"\r\n          />\r\n        </Form>\r\n\r\n        {/* 8 error, loading body작성 */}\r\n        {error ? (\r\n          <PageNotFound />\r\n        ) : (\r\n          <div>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : (\r\n              <ConWrap>\r\n                {noSearch === \"\" && search ? (\r\n                  search.map((searchData) => (\r\n                    <Link key={searchData.id} to={`/detail/${searchData.id}`}>\r\n                      <Con>\r\n                        <ConBg\r\n                          style={{\r\n                            background: `url(${\r\n                              searchData.backdrop_path\r\n                                ? `https://image.tmdb.org/t/p/original${searchData.backdrop_path}`\r\n                                : `https://media.istockphoto.com/vectors/no-image-available-sign-vector-id922962354?k=20&m=922962354&s=612x612&w=0&h=f-9tPXlFXtz9vg_-WonCXKCdBuPUevOBkp3DQ-i0xqo=`\r\n                            }) center/cover`,\r\n                          }}\r\n                        />\r\n                        <Title>{searchData.title}</Title>\r\n                      </Con>\r\n                    </Link>\r\n                  ))\r\n                ) : (\r\n                  <h3>{noSearch}</h3>\r\n                )}\r\n              </ConWrap>\r\n\r\n              // <ConWrap>\r\n              //   {search &&\r\n              //     search.map((searchData) => (\r\n              //       <Link key={searchData.id} to={`/detail/${searchData.id}`}>\r\n              //         <Con>\r\n              //           <ConBg\r\n              //             style={{\r\n              //               background: `url(${\r\n              //                 searchData.backdrop_path\r\n              //                   ? `https://image.tmdb.org/t/p/original${searchData.backdrop_path}`\r\n              //                   : `https://media.istockphoto.com/vectors/no-image-available-sign-vector-id922962354?k=20&m=922962354&s=612x612&w=0&h=f-9tPXlFXtz9vg_-WonCXKCdBuPUevOBkp3DQ-i0xqo=`\r\n              //               }) center/cover`,\r\n              //             }}\r\n              //           />\r\n              //           <Title>{searchData.title}</Title>\r\n              //         </Con>\r\n              //       </Link>\r\n              //     ))}\r\n              // </ConWrap>\r\n            )}\r\n          </div>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst SFooter = styled.footer`\r\n  width: 100%;\r\n  height: 100px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-top: 1px solid #555;\r\n  font-size: 14px;\r\n  color: gray;\r\n  margin-top: 200px;\r\n`;\r\n\r\nexport const Footer = () => {\r\n  return <SFooter>&copy; copyright UbCoding</SFooter>;\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const ScrollTop = () => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      left: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  }, [location]);\r\n\r\n  return null;\r\n};\r\n","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { router } from \"./router\";\nimport { GlobalStyled } from \"./style/GlobalStyled\";\n\nimport { Header } from \"./components/Header\";\nimport { Home } from \"./components/Home/Home\";\nimport { Detail } from \"./components/Detail/Detail\";\nimport { Search } from \"./components/Search/Search\";\nimport { Footer } from \"./components/Footer\";\nimport { PageNotFound } from \"./components/PageNotFound\";\n\nimport { HelmetProvider } from \"react-helmet-async\";\nimport { ScrollTop } from \"./components/ScrollTop\";\n\nfunction App() {\n  return (\n    <HelmetProvider>\n      <Router>\n        <GlobalStyled />\n\n        <ScrollTop />\n\n        <Header />\n\n        <Switch>\n          <Route path={router.home} exact>\n            <Home />\n          </Route>\n\n          <Route path={router.detail}>\n            <Detail />\n          </Route>\n\n          <Route path={router.search}>\n            <Search />\n          </Route>\n\n          <Route path={router.pageNotFound}>\n            <PageNotFound />\n          </Route>\n        </Switch>\n\n        <Footer />\n      </Router>\n    </HelmetProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}